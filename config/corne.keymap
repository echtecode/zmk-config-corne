/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tapdance_cmd_cmdbacktick: tapdance_cmd_cmdbacktick {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_CMD_CMDBACKTICK";
            #binding-cells = <0>;
            bindings = <&kp LCMD>, <&kp LG(GRAVE)>;
        };

        homerow_mods: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
        };

        tapdance_i: tapdance_i {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_I";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp LG(LA(I))>;
        };
    };

    macros {
        harpoon1: harpoon1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_1>;
            label = "HARPOON1";
            wait-ms = <5>;
        };

        harpoon2: harpoon2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_2>;
            label = "HARPOON2";
            wait-ms = <5>;
        };

        harpoon3: harpoon3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_3>;
            label = "HARPOON3";
            wait-ms = <5>;
        };

        harpoon4: harpoon4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_4>;
            label = "HARPOON4";
            wait-ms = <5>;
        };

        tmux_next_session: tmux_next_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp RIGHT_PARENTHESIS>;
            label = "TMUX_NEXT_SESSION";
            wait-ms = <5>;
        };

        tmux_previous_session: tmux_previous_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp LEFT_PARENTHESIS>;
            label = "TMUX_PREVIOUS_SESSION";
            wait-ms = <5>;
        };

        phpstorm_search_files: phpstorm_search_files {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp S &kp F>;
            label = "PHPSTORM_SEARCH_FILES";
            wait-ms = <5>;
        };

        phpstorm_search_symbol: phpstorm_search_symbol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp S &kp S>;
            label = "PHPSTORM_SEARCH_SYMBOL";
            wait-ms = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mo_layer2 {
            bindings = <&mo 2>;
            key-positions = <15 16>;
        };

        mo_layer3 {
            bindings = <&mo 3>;
            key-positions = <14 15>;
        };

        mo_layer4 {
            bindings = <&mo 4>;
            key-positions = <16 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W                  &kp E                  &homerow_mods LG(LS(R)) R  &kp T             &kp Y       &kp U      &tapdance_i                &kp O    &kp P           &kp LA(NUMBER_1)
&kp ESCAPE    &kp A  &kp S                  &kp D                  &homerow_mods LCMD F       &kp G             &kp H       &kp J      &kp K                      &kp L    &kp BACKSPACE   &kp LC(B)
&kp LEFT_ALT  &kp Z  &homerow_mods LG(X) X  &homerow_mods LG(C) C  &homerow_mods LG(V) V      &kp B             &kp N       &kp M      &homerow_mods RCTRL COMMA  &kp DOT  &kp LEFT_SHIFT  &kp LG(SLASH)
                                            &kp LCTRL              &mo 1                      &kp LEFT_SHIFT    &kp RETURN  &kp SPACE  &tapdance_cmd_cmdbacktick
            >;
        };

        code {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LA(NUMBER_2)  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH              &kp DOLLAR         &kp PERCENT         &kp CARET          &kp MINUS        &kp UNDERSCORE         &kp AMPERSAND     &kp ASTERISK   &kp LG(LS(P))
&kp BACKSPACE     &kp SLASH        &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp BACKSLASH  &kp LG(P)
&kp DELETE        &kp TILDE        &kp GRAVE      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES  &kp EQUAL           &kp PLUS           &kp COLON        &kp SEMICOLON          &kp QUESTION      &kp PIPE       &kp LC(GRAVE)
                                                  &trans                &trans             &kp C_PLAY_PAUSE    &kp TAB            &kp ESC          &kp LCMD
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans     &trans        &trans            &kp LG(LEFT)      &kp LG(Z)      &kp LG(LS(Z))  &kp LG(RIGHT_ARROW)  &none          &kp LG(LA(J))
&trans  &trans  &trans  &trans     &trans        &trans            &kp LEFT_ARROW    &kp DOWN       &kp UP_ARROW   &kp RIGHT            &kp BACKSPACE  &kp LG(LA(L))
&trans  &trans  &trans  &trans     &trans        &trans            &kp LG(LA(LEFT))  &kp PAGE_DOWN  &kp PAGE_UP    &kp LG(LA(RIGHT))    &trans         &kp LG(LA(K))
                        &kp LCTRL  &kp LEFT_ALT  &kp LEFT_SHIFT    &kp RETURN        &kp SPACE      &kp LCMD
            >;
        };

        numbers-media {
            bindings = <
&none         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT         &kp PLUS      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp LG(EQUAL)
&none         &trans                &trans                &trans        &trans            &trans             &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH  &kp LG(N0)
&bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR         &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &kp LG(MINUS)
                                                          &kp K_MUTE    &kp C_VOL_DN      &kp C_VOLUME_UP    &kp RET       &kp NUMBER_0  &kp NUMBER_0
            >;
        };

        window_management {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans                  &kp LA(B)              &kp LA(T)          &kp LA(X)  &kp LA(M)  &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans                  &kp LA(LC(LG(F)))      &kp LA(A)          &kp LA(C)  &kp LA(F)  &kp LA(E)  &trans
&trans  &trans  &trans  &trans  &trans            &trans                  &trans                 &kp LA(Z)          &kp LA(S)  &kp LA(D)  &trans     &trans
                        &trans  &kp LA(LC(LEFT))  &kp LA(LC(LG(LEFT)))    &kp LA(LC(LG(RIGHT)))  &kp LA(LC(RIGHT))  &trans
            >;
        };
    };
};
